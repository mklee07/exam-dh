  // 하는일 : 행에 있는 data 값의 크게에 따라 열의 크기를 조절하는 함수
  // 아까워서 못지우겠음.
  const autoSizeAll = useCallback((skipHeader) => {
    const allColumnIds = []; //columnIds을 배열로 만듬

    // forEach를 for 모양으로 만듬.
    // for (id=0,id<colume ,id++){
    // allColumnIds.push(column[id].getId())
    // }
    gridRef.current.columnApi.getColumns().forEach((column) => {
      allColumnIds.push(column.getId()); //값들을 리스트로 만든 allColumnIds에 푸쉬함. column.getId()로 열의 id값을 가져옴
      console.log(column.getId()); // 값들을 가져온것을 확인할 수 있음.
    });
    gridRef.current.columnApi.autoSizeColumns(allColumnIds, skipHeader);
    console.log(gridRef.current); //gridRef에 저장되어 있는 값에 접근
    console.log(gridRef.current.columnApi); //columnApi에 저장되어있는 getColumn함수를 사용하여 열의 값을 가져옴.
    console.log(gridRef.current.columnApi.getColumns()); //5개는 가져오지만 id값은 가져오지 못함.
    console.log(allColumnIds); //forEach함수로 id값을 가져와 배열에 값에 넣어진 것을 확인할 수 있음.
  });